// <auto-generated />
using System;
using EsSettimanaleU5S3.DataModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EsSettimanaleU5S3.Migrations
{
    [DbContext(typeof(PizzeriaDbContext))]
    [Migration("20240801163928_NuovoDatabase")]
    partial class NuovoDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EsSettimanaleU5S3.DataModel.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Tomato"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Cheese"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pepperoni"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Mushrooms"
                        });
                });

            modelBuilder.Entity("EsSettimanaleU5S3.DataModel.IngredientProduct", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("IngredientId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("IngredientProducts");

                    b.HasData(
                        new
                        {
                            IngredientId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            IngredientId = 2,
                            ProductId = 1
                        },
                        new
                        {
                            IngredientId = 3,
                            ProductId = 2
                        },
                        new
                        {
                            IngredientId = 2,
                            ProductId = 2
                        },
                        new
                        {
                            IngredientId = 2,
                            ProductId = 3
                        },
                        new
                        {
                            IngredientId = 4,
                            ProductId = 3
                        });
                });

            modelBuilder.Entity("EsSettimanaleU5S3.DataModel.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsCompleted = false,
                            Notes = "Leave at the door",
                            OrderDate = new DateTime(2024, 8, 1, 18, 39, 28, 202, DateTimeKind.Local).AddTicks(3853),
                            ShippingAddress = "123 Main St",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("EsSettimanaleU5S3.DataModel.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            OrderId = 1,
                            ProductId = 1,
                            Quantity = 2,
                            TotalPrice = 11.98m
                        },
                        new
                        {
                            Id = 2,
                            OrderId = 1,
                            ProductId = 3,
                            Quantity = 1,
                            TotalPrice = 8.99m
                        });
                });

            modelBuilder.Entity("EsSettimanaleU5S3.DataModel.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DeliveryTime")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PhotoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DeliveryTime = 20,
                            Name = "Margherita",
                            PhotoUrl = "margherita.jpg",
                            Price = 5.99m
                        },
                        new
                        {
                            Id = 2,
                            DeliveryTime = 25,
                            Name = "Pepperoni",
                            PhotoUrl = "pepperoni.jpg",
                            Price = 7.99m
                        },
                        new
                        {
                            Id = 3,
                            DeliveryTime = 30,
                            Name = "Quattro Formaggi",
                            PhotoUrl = "quattro_formaggi.jpg",
                            Price = 8.99m
                        });
                });

            modelBuilder.Entity("EsSettimanaleU5S3.DataModel.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("EsSettimanaleU5S3.DataModel.RoleUser", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("RoleUsers");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            UserId = 1
                        },
                        new
                        {
                            RoleId = 2,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("EsSettimanaleU5S3.DataModel.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@example.com",
                            Name = "Admin User",
                            Password = "admin123"
                        },
                        new
                        {
                            Id = 2,
                            Email = "user@example.com",
                            Name = "Regular User",
                            Password = "user123"
                        });
                });

            modelBuilder.Entity("EsSettimanaleU5S3.DataModel.IngredientProduct", b =>
                {
                    b.HasOne("EsSettimanaleU5S3.DataModel.Ingredient", "Ingredient")
                        .WithMany("IngredientProducts")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EsSettimanaleU5S3.DataModel.Product", "Product")
                        .WithMany("IngredientProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingredient");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EsSettimanaleU5S3.DataModel.Order", b =>
                {
                    b.HasOne("EsSettimanaleU5S3.DataModel.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EsSettimanaleU5S3.DataModel.OrderItem", b =>
                {
                    b.HasOne("EsSettimanaleU5S3.DataModel.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EsSettimanaleU5S3.DataModel.Product", "Product")
                        .WithMany("OrderItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EsSettimanaleU5S3.DataModel.RoleUser", b =>
                {
                    b.HasOne("EsSettimanaleU5S3.DataModel.Role", "Role")
                        .WithMany("RoleUsers")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EsSettimanaleU5S3.DataModel.User", "User")
                        .WithMany("RoleUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EsSettimanaleU5S3.DataModel.Ingredient", b =>
                {
                    b.Navigation("IngredientProducts");
                });

            modelBuilder.Entity("EsSettimanaleU5S3.DataModel.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("EsSettimanaleU5S3.DataModel.Product", b =>
                {
                    b.Navigation("IngredientProducts");

                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("EsSettimanaleU5S3.DataModel.Role", b =>
                {
                    b.Navigation("RoleUsers");
                });

            modelBuilder.Entity("EsSettimanaleU5S3.DataModel.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("RoleUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
